spring:
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
        alphanumeric-ids:
          enabled: false

resilience4j:
  circuitbreaker:
    instances:
      openAPI_getWeatherForecast:
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 1m
        slidingWindowSize: 10
        slidingWindowType: TIME_BASED
      openAPI_getMidLandForecast:
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 1m
        slidingWindowSize: 10
        slidingWindowType: TIME_BASED
      openAPI_getWeekWeatherForecast:
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 1m
        slidingWindowSize: 10
        slidingWindowType: TIME_BASED

  timelimiter:
    instances:
      openAPI_getWeatherForecast:
        timeoutDuration: 10s
      openAPI_getMidLandForecast:
        timeoutDuration: 3s
      openAPI_getWeekWeatherForecast:
        timeoutDuration: 10s
api:
  mafra:
    name: "openAPIGarden"
    url: "url"
    secret: asdf
  weather:
    url: asdf
    baseUrl: "http://apis.data.go.kr/1360000"
    name: "openAPI"
    secret: asdf
  weatherAll:
    url: asdf
  weatherWeek:
    url: asdf
  reverseGeo:
    name: "naverGeo"
    url: asdf
    id: asdf
    secret: asdf
  slack:
    bot: http://example.com
forecast:
  weekly:
    publish:
      time: 0600